version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kabras-store-app-prod
    restart: unless-stopped
    environment:
      - DB_HOST=db
      - DB_DATABASE=kabras_store
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - APP_ENV=production
      - APP_DEBUG=false
    depends_on:
      - db
    volumes:
      - ./uploads:/var/www/html/uploads
      - ./backups:/var/www/html/backups
      - ./storage:/var/www/html/storage
    networks:
      - kabras-network
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
        reservations:
          cpus: "0.5"
          memory: 256M

  db:
    image: mysql:8.0
    container_name: kabras-store-db-prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: kabras_store
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
      - ./Queries/main.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - kabras-network
    command: --default-authentication-plugin=mysql_native_password
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 512M

  nginx:
    image: nginx:alpine
    container_name: kabras-store-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - kabras-network
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 128M
        reservations:
          cpus: "0.25"
          memory: 64M

volumes:
  db_data:
    driver: local

networks:
  kabras-network:
    driver: bridge
